package test1;

public class method1 {

	public static void main(String[] args) {
		/* 메서드
		 * - 어떤 작업을 수행하는 코드들의 모음(=작업의 최소 단위)
		 * - 반드시 호출되어야만 사용 가능
		 * 	=> 호출 당하는 메서드 : Worker 메서드, 호출하는 메서드 : Caller 메서드
		 * 	=> main() 메서드는 자바에서 유일하게 프로그램 시작 시 자동으로 호출되는 메서드 (main() 메서드를 프로그램 시작점이라고 함)
		 * - 메서드 호출 시 전달하는 값을 전달인자(Argument) 라고 하며 메서드에서 전달되는 값(전달인자)을 저장하는 변수를 매개변수(Parameter) 라고 함
		 * 	=> 파라미터는 전달인자 갯수에 따라 없을 수도 있고, 여러 개 있을 수도 있다.
		 * - 메서드가 호출되면 정해진 작업을 수행한 후에 반드시 호출한 위치로 흐름이 되돌아감
		 * - 메서드 작업 완료 후 돌아갈 때 가지고 가는 값(돌려주는 값)을 리턴값(Return value)이라고 함
		 *   => 메서드 용도에 따라 리턴값이 없을 수도 있고, 있을 수도 있음(한 번에 하나만 리턴 가능)
		 * - 단, return 문을 사용할 때 반드시 모든 경우에 return 문이 실행될 수 있도록 해야한다!
		 *   (ex. if ~ else if 문을 사용할 경우 else 문이 없이 if 와 else if 에서만 return 하면 X)
		 *   
		 *	 < 메서드 정의 기본 문법 >
		 * 	[제한자] 리턴타입 메서드명([매개변수...]) {
		 * 	// 메서드 호출 시 수행할 코드들...
		 * 	[return [리턴값];] 
		 *   
		 *  < 메서드 정의 형태 4가지 분류 >
		 * 1. 매개변수도 없고, 리턴값도 없는 메서드
		 * 2. 매개변수는 없고, 리턴값만 있는 메서드
		 * 3. 매개변수만 있고, 리턴값은 없는 메서드
		 * 4. 매개변수도 있고, 리턴값도 있는 메서드
		 *  
		 *  */
		
		// -------------------------------메서드 호출하는 위치---------------------------------
		System.out.println("오빠 : 동생아 불 좀 꺼라");
		sister_1();
		System.out.println("동생이 불을 끄고 갔다");

	} // main() 메서드 끝
	
	// ----------------------------메서드 정의하는 위치----------------------------------
	// 기본 문법 : [제한자] 리턴타입 메서드명([매개변수...])
	// 1. 매개변수도 없고, 리턴값도 없는 메서드
	// => 리턴값이 없으므로 리턴타입 부분에 void 명시(리턴할 데이터가 없다는 의미의 특수한 타입)
	// => 매개변수가 없으므로 메서드명 뒤의 소괄호() 안에 아무것도 명시하지 않음
	public static void sister_1() {
		// sister_1() 메서드 호출 시 수행할 작업들을 기술
		System.out.println("동생 : 오빠가 불 끄라고 해서 불을 껐다");
	} //sister_1() 메서드 끝
	// => sister_1() 메서드 수행이 끝난 후에는 다시 호출한 곳으로 되돌아감
	

} // method1 클래스 끝
